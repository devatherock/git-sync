docker_image: &docker_image
  docker:
    - image: cimg/openjdk:11.0
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
    
resource_class: &resource_class    
  resource_class: small
  
work_directory: &work_directory
  working_directory: ~/git-sync
  
executors:
  docker-executor:
    <<: *docker_image
    <<: *resource_class
    <<: *work_directory  
  
version: 2.1
jobs:
  test:
    executor: docker-executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4a:86:fe:0e:c3:0e:ad:0d:1d:5c:3e:48:cf:28:39:5d"
      - checkout
      - attach_workspace:
          at: ~/git-sync
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          sh unit-tests.sh
      - store_artifacts:
          path: build/reports/jacoco
      - store_test_results:
          path: build/test-results

  groovy_script_to_jar:
    docker:
      - image: devatherock/drone-groovy-script-to-jar:0.6.2
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
    environment:
      PLUGIN_SCRIPT_PATH: SyncGitRepos.groovy
    steps:
      - checkout
      - run: sh /scripts/entry-point.sh
      - persist_to_workspace:
          root: ~/git-sync
          paths:
            - SyncGitRepos.jar
            
  docker_build_dry_run:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: docker build -f docker/Dockerfile .
      
  publish:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          docker build -t devatherock/git-sync:$TAG -f docker/Dockerfile .
          docker tag devatherock/git-sync:$TAG devatherock/git-sync:latest
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push devatherock/git-sync:$TAG
          docker push devatherock/git-sync:latest
          
  functional_test:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4a:86:fe:0e:c3:0e:ad:0d:1d:5c:3e:48:cf:28:39:5d"
      - checkout
      - attach_workspace:
          at: ~/git-sync
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          sh functional-tests.sh
      - store_test_results:
          path: build/test-results
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
          
  publish_release:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker pull devatherock/git-sync:$DEV_TAG
          docker tag devatherock/git-sync:$DEV_TAG devatherock/git-sync:$TAG
          docker push devatherock/git-sync:$TAG
          
  notify:
    docker:
      - image: devatherock/simple-slack:0.7.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#33ad7f"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack

workflows:
  version: 2.1
  build_publish:
    jobs:
      - test:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - groovy_script_to_jar:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
          requires:
            - test
      - publish:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar
      - functional_test:
          context:
            - docker-credentials
            - git-token
          requires:
            - publish
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - functional_test
  release:
    jobs:
      - publish_release:
          context:
            - docker-credentials
          filters:
            branches:
              only: non-existent-branch
            tags:
              only: /^v[0-9\.]+$/
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - publish_release
  pr_check:
    jobs:
      - test:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: master
      - groovy_script_to_jar:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: master
          requires:
            - test    
      - docker_build_dry_run:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar